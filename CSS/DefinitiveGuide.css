/* Начал изучать 12.10.2020г. */

/* https://github.com/meyerweb/csstdg4figs */

/* стр23 */
/* Замещаемые элементы - содержимое может отсутствовать в документе (картинки, input) */ 

/* стр25 */
/* блочные элементы нельзя вкладывать в строчные */

/* стр 30 */
/* тег link */

/* стр 33 */
/* тег style */
/* @import */

/* стр 37 */
/* Стилевые правила */
/* вендорные свойства начинаются с дефиса */

/* стр 39 */
/* CSS не чувствителен к отступам */

/* стр 40 */
/* комментарии нельзя вкладывать друг в друга */

/* стр 41 */
/* @media
 медиазапросы определяют техническую среду (устройство, разрешение экрана и т. п.) */

 /* стр 47 */
 /* @supports - запрос поддержки. если браузер поддерживает то выполняется, иначе - игнорируется. */


/* ##############  Селекторы  */


/* стр 52 */
/* Селектор указывает на элементы, выступающие в качестве базовых структурных компонентов документа. Селекторы в HTML - только оговоренные в спецификации, в XML - допустимы произвольные иена селекторов */

/* стр 55 */
/* ключевые слова в виде исключений не всегда разделяются пробелом
например:
h2 { font: large/150% sans-serif; } */
/* при назначению свойству одновременно несколько значений ключевые слова разделяются запятой */
/* параметры передаваемые функциям разделятся запятыми */

/* стр 56 */
/* группирование селекторов производится через запятую */

/* стр 57 */
/* * универсальный селектор */

/* стр 59 */
/* совместное группирование -  */

/* стр 60 */
/* что бы воспользоваться новым элементом в устаревшем браузере элемент можно создать с помощью JS */

/* стр 64 */
/* чтобы задать одному элементу более одного класса их нужно записать через запятую. Пример: <p class="first second"> Some text </p> */
/* в CSS при использовании нескольких классов разделителем является точка. Пробелы не ставить! */

/* стр 65 */
/* # - селектор идентификатора */

/* стр 68 - 76*/
/* https://code.tutsplus.com/ru/tutorials/the-30-css-selectors-you-must-memorize--net-16048 */
/* Селектор атрибута бывают:
        простые - h1 [class] {color: red};
        точных значений - - a[href="http://www.w3.org/"][title="W3C Home"] {font-size: 200%;}
        частичных значений - *[lang | = "en] {color: white:};
                            img [title~="Figure"] {border:1px};
        обязательных значений  - ???
        */

/* стр 78 */
/* Контекстный селектор - h1 em {color:red};
применится ко всем элементам em вложенным в h1
                          blockquote b, p b {color: gray;} 
применится ко всем элементам em вложенным в blockquote и p */
/* применяется ко всем потомкам! */

/* стр 83 */
/* селекторы дочерних элементов  - h1 > strong {color: red;} */

/* стр 83 */
/* селекторы соседних элементов  - h1 + p {color: red;} */

/* стр 86 */
/* селекторы  всех соседних элементов  - h1 ~ p {color: red;} */

/* стр 87 */
/* Селекторы псевдоклассов */

/* пример:
a:link:hover {color: red;}
a:visited:hover {color: maroon;} */

/* стр 90 - 101 */
/* псевдоклассы привязаны к строго заданным элементам */
/* часто используемые:
:only-of-type
:only-of-type
:first-child
:last-child
:only-child

:first-of-type
:last-of-type

:nth-child()
:nth-last-child()
:nth-of-type() */

/* стр 102 */
/* Динамические псевдоклассы */
/* Псевдокласс гиперссылок:
:link - не посещенная
:visited - посещенная
:focus - 
:hover - наведен курсор
:active - нажата кнопка, ссылка */

/* стр 108 */
/* Псевдоклассы пользовательского интерфейса */

/* стр 119 */
/* Псевдоэлементы */
/* ::first-letter - применяются только к блочным элементам
::first-line - применяются только к блочным элементам */

/* ::before
::after */


/* стр 125 - 140 */
/* ##############  Приоритетность и каскадирование стилей  */


/* три главных принципа: приоритетность, наследование, каскадирование */

/* id .................. 0, 1, 0, 0
class .................. 0, 0, 1, 0
elem & pseudo-element... 0, 0, 0, 1
встроенные в HTML....... 1, 0, 0, 0  */

/* !important */
/* пример - p.dark {color: #333 !important; background: white;} */

  /* стр 131 */
/* Наследование */
/* не все свойства наследуются */

  /* стр 134 */
/* Каскадирование */
/* Уровень важности стилей:
1. Reader !important
2. Author !important 
3. Author  
4. Reader  
5. User agent (например браузер) */

/* рекомендуемый порядок объявления
a:link 
a:visited 
a:focus 
a:hover
a:active */


/* стр 141 - 176 */
/* ##############  Значения и единицы измерения */


/* глобальные ключевые слова
inherit - наследовать свойство родителя
initial - сброс к значению по умолчанию
unset - замена одновременно inherit и initial */

/* all - свойство представляет в объявлении все свойства кроме direction и unicode-bidi. Его значениями могут быть только глобальные ключевые слова */

 /* 144 - 158 */
 /* строки, URL, изображения  и др.*/
/* "string" или 'string' */
/* url(путь) - указывается относительно расположения CSS, а не HTML */

/* Абсолютные ед измерения:
Дюйм:                 in
Сантиметр:            cm
Миллиметр:            mm
Четверть миллиметра:  q
Пункт:                pt     1 дюйм = 6 пиков = 72 точки
Пики:                 pc     12 точек
Пиксель:              px */

/* ед разрешения
точек на дюйм:      dpi   
точек на сантиметр: dpcm  
точек на пиксель:   dppx */

/* Относительные ед измерения:
em = значению свойства font-size (произошло от высоты буквы "m")
ex значению свойства font-size (высота зависит от шрифта)(произошло от высоты буквы "x")
rem = значению свойства font-size корневого элемента
ch  = полному размеру цифры "0" */

/* Зависящие от ширины просмотра ед измерения:
vm   ширина окна просмотра
vh   высота окна просмотра
vmin минимальный размер окна
vmax максимальный размер окна */

/* 159 */
/* Вычисляемые значения */
/* пример:
p {width: calc(90% - 2em);} пробел до и после мат знака важен */

/* 161 */
/* Цвет
rgb(100%, 100%, 100%);
rgb(255, 255, 255);

rgb(100%, 100%, 100%, 0.5);
rgb(255, 255, 255, 0.5);

#000000
#000

#000000FF

hsl(360, 100%, 100%*)
hsl(360, 100%, 100%* 0.5)*/

/* 171 */
/* Углы
deg 
grad 
rad 
turn */

/* 172 */
/* Время 
s 
ms
hz
khz  */

/* 173 */
/* Положение - все возможные варианты
[
[ left | center | right | top | bottom | <percentage> | <length> ] |
[ left | center | right | <percentage> | <length> ]
[ top | center | bottom | <percentage> | <length> ] |
[ center | [ left | right ] [ <percentage> | <length> ]? ] &&
[ center | [ top | bottom ] [ <percentage> | <length> ]? ]
] */

/* Пользовательские переменные:
Пример:
html {
  --base-color: #639;
  --highlight-color: #AEA;
  }
  h1 {color: var(--base-color);}
  h2 {color: var(--highlight-color);} */


  /* стр 177 - 234 */
/* ##############  Шрифты */


/* основные начертания шрифтов:
Serif
Sans-serif
Monospace
Cursive
Fantasy */

/* Пример:
font-family: serif;
font-family: 'My font', '#$font'; '' - если есть пробелы или  знаки #, $.
Уже работает без кавычек (кроме ключевых слов названии шрифта) */

/* отложенная загрузка шрифтов
@font-face {
  font-family: "SwitzeraADF";
  src: url("SwitzeraADF-Regular.otf");
  } */

  /* 195 */
  /* Насыщенность
  font-weight

  повышение и понижение насыщенности
  bolder      lighter */

  /* font-size
  1em = 100%
  pt  */

/* font-size-adjust - корректировка аспекта шрифта (не поддерживается браузерами) */

/* 218 - 234 */
/* font-stretch
font-kerning
font-variant
font сначала указывать font-size потом font-family. Оба этих свойства в конце */


  /* стр 235 - 284 */
/* ##############  Текстовые свойства */


/* Отступы и выравнивания */

/* Заполнение документа:
блочные  сверху вниз
строчные слева направо */

/* text-indent - отступ строки (начало абзаца)
text-align - выравнивание строк по ширине
line-height - выравнивание строк по высоте
vertical-align -вертикальное выравнивание  (только для строк и ячеек таблиц)
Для верх и ниж индексов, маленьких картинок. При этом выравнивается текст относительно картинок, а не наоборот (стр 251)  */

/* 254 */
/* Интервалы между словами и символами
word-spacing
letter-spacing */

/* 258 - */
/* Регистр символов
text-transform */

/* text-decoration не наследуется
text-rendering - улучшение читабельности текста
text-shadow
white-space - пробелы, табуляции, перенос строки
tab-size - ширина отступа табуляции (у меня не работало)
hyphens - перенос слов
word-break - мягкий перенос
overflow-wrap - разрыв строк
writing-mode - направление письма
text-orientation - ориентация символов
direction - направление текста в блочных элементах
unicode-bidi - ??? */


/* стр 286 - 342 */
/* ##############  Основы визуального оформления документа */

/* content
padding
border
outline
margin */

/* display - определяет расположение элемента
          inline - (по умолчанию)
          block 
          inline-block - Это значение генерирует блочный элемент, который обтекается другими элементами веб-страницы подобно встроенному элементу. Фактически такой элемент по своему действию похож на встраиваемые элементы (вроде тега <img>). При этом его внутренняя часть форматируется как блочный элемент, а сам элемент — как встроенный.
          На инлайновые элементы не действует высота */

/* width - без учета padding, border, margin Применяется только к блокам
height - без учета padding, border, margin Применяется только к блокам
Total element width = width + left padding + right padding + 
+ left border + right border + left margin + right margin
box-sizing: content-box - без учета padding, border, margin
box-sizing: border-box - c учетом padding, border НО без margin */

/* 307 */
/* margin вертикальные схлопываются при между элементами и равен большему значению */

/* 313 */
/* Строчные элементы
line-height
box-decoration-break clone | slice */

/* 336 */
/* Строчно-блочные элементы
inset-block */

/* Перетекание содержимого
display */


  /* стр 343 - 410 */
/* ##############  Поля, отступы, границы и рамки */


/* width 
height 
по умолчанию - auto
по умолчанию = контенту
не применяются к незамещаемым строчным элементам

padding (в книге переведено как поле)
margin (в книге переведено как отступ)
border (в книге переведено как граница)

Задание значений:
4 padding: top right bottom left
3 padding: top right bottom     => left = right
2 padding: top right            => bottom = top left = right
1 padding: top                  => right = top bottom = top left = right */

/* 356 */
/* границы
border: width border-style color;
border-style
Задание несколько границ:
border: width border-style color;
border-style: border-style border-style border-style border-style;
border-top(right bottom left)
border-width: px | em | thin | medium | thick 
border-width: 5px 10px 2px 6px;
border-color: #00f #f00 #f0f #0f0;
border-color: transparent; - прозрачная граница */

/* 370 */
/* можно передавать от 1 до 4 значений
border-radius: px | em - обычное скругление
border-radius: % - эллиптическое скругление
2 r для одного угла
border-radius: 3px / 10px; */

/* 378 */
/* Рисованные рамки
border-image-source: url(circle.png);
border-image-slice:
border-image-width:
border-image-outset:
НЕ РАЗОБРАЛСЯ! */

/* border-image-repeat: */

/* 395 */
/* Внешний контур
outline-style:
outline-width:
outline-color: */

/* 401 */
/* margin
схлопывание - при совмещении верхнего и нижнего остается больший из двух
схлопывание при вложении элементов приводит к неоднозначным результатам! */


/* стр 411 - 512 */
/* ##############  Цвет, фон и градиент */


/* Цвет
color:
background-color:
background-clip: border-box | padding-box | content-box */

/* 423 */
/* Фоновое изображение
background-image: */

/* 427 */
/* Позиционирование фона
background-position:
background-origin:
background-repeat: */

/* 451 */
/* background-attachment:
background-size:
background: */

/* 467 */
/* слои фона
background-image: url(bg01.png), url(bg02.gif), url(bg03.jpg);
background-position: top right, left center, 50% 100%; */

/* 474 */
/* Градиенты
background-image: linear-gradient(90deg, #f00, #fff);
background-image: radial-gradient(90deg, #f00, #fff); */

/* 509 */
/* тень элемента
box-shadow: */


/* стр 513 - 549 */
/* ##############  Обтекание и форма элемента */


/* float: left | right | none
Не применяется к абсолютно позиционированным элементам
Выравниваемый элемент автоматически заключается в блочный контейнер */

/* 530 */
/* clear: left | right | both | none */

/* 534 */
/* shape-out-side: 
shape-image-threshold:
shape-margin:  */


/* стр 551 - 589 */
/* ##############  Позиционирование */


/* position: static | relative | sticky | absolute | fixed
top right bottom left 
width:
height: 
min-(max)width:
min-(max)height:  */

/* 560 */
/* overflow: visible | hidden | scroll | auto
visibility: visible | hidden | collapse */

/* 563 */
/* Абсолютное позиционирование */

/* 577 */
/* z-index:  */



/* стр 591 - 686 */
/* ##############  Гибкая верстка */

Конспект чей-то https://www.instagram.com/front.ru/

create-react-app my app - my app - название проекта
npm start для - старта и работы нужен package.json
Node.js нужен для использования модулей

L05
SPA - single page application

L06
в тегах вместо clsss - className
должен быть только один корневой узловой тег

L07 
Компонента это функция, возвращающая разметку JSX и одновременно это тег (или кусок какогото HTML кода).
const App =() => {return (<div>Loren<div>);}
Компонетку вызывать нельзя, ее взывает React.
Вставляем компоненту вместо вызова. Например: <App />
Компоненту именовать с большой буквы

L08
React использует модульный подход
import someFunction from './index.js'; // расширение не указывать
import Reacr from 'react'; // импорт модулей
export defaulte someFunction;

L10
При экспотре по дефолту возможна ошибка при именовании импорта

L11
Задние стилей пример
<div className='style'></div>

L12
темы дизайна соц сетей
https://themeforest.net/search/social%20network

L13
Git
при инсталяции пакетов приписывать --save для того чтобы добавить этот пакет в package.json

L14
CSS.Modules
Modules добавляет преффиксы и постфиксы в название className для обеспечения уникальности имени.  Это делает Reacr. Эти названия лежат в объекте classes. Classel можно назвать полюбому.
Не использовать пробелы в названиях className
Стили называть например: style.module.css
Пример импорта стилей: import someStyle from './someStyle.css'; // расширение указывать
Пример записи: <nav className={classes.nav}>
импорт: import classes from './SomeStyl.module.css';
в свойствах нельзя использовать дефиз в названиях стилей НЕПРАВИЛЬНО {s.nav-bar}
Пример несколько стилей одновременно {`${s.item} ${s.active}`}

L15
Компоненты распологать по папкам.

L16
props это параметры функции
props в компоненту приходит всегда

Пример задания props с помощью атрибута:

const MyPosts = () => {
  return (
    <Post name='Dima' age='30' />
  )
};

Пример использования props:

const Posts = () => {
  return (
     {props.name} {props.age}
  )
};

L17




